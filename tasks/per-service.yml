---

- name: If we're forcing a redeployment then just delete the DB directory
  when: force_redeploy
  ansible.builtin.file:
    path: "{{ service_containers_dir }}/{{ service.name }}/volumes/postgresql-data"
    state: absent

- name: Create CaaS Directories
  ansible.builtin.file:
    path: "{{ dir_item.path }}"
    state: directory
    owner: "{{ dir_item.owner | default('root') }}"
    group: "{{ dir_item.group | default('root') }}"
  loop:
    - path: "{{ service_containers_dir }}/{{ service.name }}/"
    - path: "{{ service_containers_dir }}/{{ service.name }}/scripts"
    - path: "{{ service_containers_dir }}/{{ service.name }}/secrets"
    - path: "{{ service_containers_dir }}/{{ service.name }}/volumes"
    - path: "{{ service_containers_dir }}/{{ service.name }}/volumes/config"
    - path: "{{ service_containers_dir }}/{{ service.name }}/volumes/postgresql-data"
      owner: 1001
      group: 1001
  loop_control:
    loop_var: dir_item

- name: Set up additional trusted root certificates for NodeJS
  when: additionalTrustedRootCerts is defined
  block:
    - name: Create CaaS Directory for certs
      ansible.builtin.file:
        path: "{{ dir_item }}"
        state: directory
        owner: root
        group: root
      loop:
        - "{{ service_containers_dir }}/{{ service.name }}/"
        - "{{ service_containers_dir }}/{{ service.name }}/certs"
        - "{{ service_containers_dir }}/{{ service.name }}/certs/roots"
      loop_control:
        loop_var: dir_item

    - name: Download any additional trusted Root CA certs
      ansible.builtin.get_url:
        url: "{{ download_item }}"
        dest: "{{ service_containers_dir }}/{{ service.name }}/certs/roots/{{ download_item | basename }}"
        owner: root
        group: root
        mode: 0644
      loop: "{{ additionalTrustedRootCerts }}"
      loop_control:
        loop_var: download_item

    - name: Join all the certs into a single file
      ansible.builtin.shell: "cat {{ service_containers_dir }}/{{ service.name }}/certs/roots/* > {{ service_containers_dir }}/{{ service.name }}/certs/extra-ca-bundle.crt"

- name: Template CaaS deployment files - servicectl.sh.j2
  ansible.builtin.template:
    src: servicectl.sh.j2
    dest: "{{ service_containers_dir }}/{{ service.name }}/scripts/servicectl.sh"
    owner: root
    group: root
    mode: 0755

- name: "Template CaaS deployment files - {{ service.name }}.service"
  ansible.builtin.template:
    src: service.j2
    dest: "/etc/systemd/system/{{ service.name }}.service"
    owner: root
    group: root
    mode: 0755

- name: "Template CaaS deployment files - Keycloak Env Vars"
  ansible.builtin.template:
    src: env_vars.j2
    dest: "{{ service_containers_dir }}/{{ service.name }}/secrets/.kc_env_vars"
    owner: root
    group: root
    mode: 0740
  vars:
    var_set: keycloak

- name: "Template CaaS deployment files - DB Env Vars"
  ansible.builtin.template:
    src: env_vars.j2
    dest: "{{ service_containers_dir }}/{{ service.name }}/secrets/.db_env_vars"
    owner: root
    group: root
    mode: 0740
  vars:
    var_set: postgres
